{
  "version": 3,
  "sources": ["src/js/player.js", "src/js/friends.js", "src/js/ratingData.js", "src/js/rating.js", "src/js/game.js"],
  "sourcesContent": ["class Player {\n  constructor(game) {\n    this.game = game;\n    this.controlButtonX = 615;\n    this.controlButtonY = 550;\n    this.controlButtonWidth = 200;\n    this.controlButtonHeight = 60;\n    this.width = 21;\n    this.height = 69;\n    this.step = 0;\n    this.transitions = [\n      { x: 440, y: 445 },\n      { x: 345, y: 415 },\n      { x: 270, y: 460 },\n      { x: 180, y: 475 },\n      { x: 105, y: 450 },\n      { x: 115, y: 385 },\n    ];\n    this.player = document.getElementById('player');\n  }\n\n  draw() {\n    if (this.step !== 0 && this.step < this.transitions.length) {\n      this.game.getContext().clearRect(\n        this.transitions[this.step - 1].x,\n        this.transitions[this.step - 1].y,\n        this.width,\n        this.height,\n      );\n    }\n    this.game.getContext().fillStyle = 'transparent';\n    this.game.getContext().fillRect(\n      this.transitions[this.step].x,\n      this.transitions[this.step].y,\n      this.width,\n      this.height,\n    );\n    this.game.getContext().drawImage(\n      this.player,\n      this.transitions[this.step].x,\n      this.transitions[this.step].y,\n      this.width,\n      this.height,\n    );\n  }\n\n  isClickedInsideControlButton(x, y) {\n    return x >= this.controlButtonX\n      && x <= (this.controlButtonX + this.controlButtonWidth)\n      && y >= this.controlButtonY && y <= (this.controlButtonY + this.controlButtonHeight);\n  }\n\n  nextStep() {\n    if (this.step < this.transitions.length - 1) {\n      this.step += 1;\n      this.draw();\n    }\n  }\n}\n\nexport default Player;\n", "class Friends {\n  constructor(game) {\n    this.game = game;\n    this.canvas = this.game.getCanvas();\n    this.userBoxWidth = 50;\n    this.userBoxHeight = 50;\n    this.startUserBoxX = 35;\n    this.startUserBoxY = 565;\n    this.unitsOnBar = 8;\n    this.gapBetweenBoxes = 10;\n    this.userDataIndex = 0;\n    this.friends = ['egor', 'oleg', 'irina', 'marina', 'ivan', 'diana', 'sasha', 'grisha', undefined, undefined];\n    this.emptyBox = document.getElementById('empty-box');\n    this.userBox = document.getElementById('user-box');\n    this.arrowLeftX = 10;\n    this.arrowWidth = 20;\n    this.arrowLeftY = 565;\n    this.arrowHeight = 30;\n    this.arrowRightX = 515;\n    this.arrowRightY = 565;\n  }\n\n  draw() {\n    let offset = 0;\n    for (let boxIndex = this.userDataIndex;\n      boxIndex < this.unitsOnBar + this.userDataIndex; boxIndex += 1) {\n      this.game.getContext().fillStyle = 'transparent';\n      this.game.getContext().clearRect(\n        this.startUserBoxX + offset,\n        this.startUserBoxY,\n        this.userBoxWidth,\n        this.userBoxHeight,\n      );\n      if (this.friends[boxIndex]) {\n        this.game.getContext().drawImage(\n          this.userBox,\n          this.startUserBoxX + offset,\n          this.startUserBoxY,\n          this.userBoxWidth,\n          this.userBoxHeight,\n        );\n      } else {\n        this.game.getContext().drawImage(\n          this.emptyBox,\n          this.startUserBoxX + offset,\n          this.startUserBoxY,\n          this.userBoxWidth,\n          this.userBoxHeight,\n        );\n      }\n      offset += this.gapBetweenBoxes + this.userBoxWidth;\n    }\n  }\n\n  redraw(x, y) {\n    const leftArrowClicked = !!(x >= this.arrowLeftX\n      && x <= this.arrowLeftX + this.arrowWidth\n      && y >= this.arrowLeftY\n      && y <= this.arrowLeftY + this.arrowHeight);\n    if (leftArrowClicked) {\n      this.userDataIndex = this.userDataIndex - 1 > 0 ? this.userDataIndex - 1 : 0;\n    } else if (this.friends.length - this.unitsOnBar > 0) {\n      this.userDataIndex = (this.friends.length - this.unitsOnBar - 1) >= this.userDataIndex\n        ? this.userDataIndex + 1\n        : this.userDataIndex;\n    }\n    this.draw();\n  }\n\n  isClickedOnArrowButtons(x, y) {\n    return (x >= this.arrowLeftX\n      && x <= this.arrowLeftX + this.arrowWidth\n      && y >= this.arrowLeftY && y <= this.arrowLeftY + this.arrowHeight)\n      || (x > this.arrowRightX\n        && x < this.arrowRightX + this.arrowWidth\n        && y >= this.arrowRightY && y <= this.arrowRightY + this.arrowHeight);\n  }\n}\n\nexport default Friends;\n", "const ratingData = {\n  rating: [\n    {\n      id: '123',\n      name: '\u0412\u043B\u0430\u0434\u0438\u043C\u0438\u0440',\n      lastName: '\u041B\u0430\u0440\u0438\u043E\u043D\u043E\u0432',\n      img: './male.png',\n      points: '463',\n    },\n    {\n      id: '9',\n      name: '\u0412\u043B\u0430\u0434\u0438\u043C\u0438\u0440',\n      lastName: '\u0421\u0435\u0440\u0433\u0435\u0435\u0432',\n      img: './male.png',\n      points: '521',\n    },\n    {\n      id: '231',\n      name: '\u0412\u0435\u043D\u0438\u0430\u043C\u0438\u043D',\n      lastName: '\u0412\u0430\u0441\u0438\u043B\u044C\u0435\u0432',\n      img: './male.png',\n      points: '865',\n    },\n    {\n      id: '321',\n      name: '\u041C\u0430\u0440\u0438\u044F',\n      lastName: '\u041B\u043E\u0433\u0438\u043D\u043E\u0432\u0430',\n      img: './female.png',\n      points: '865',\n    },\n    {\n      id: '492',\n      name: '\u0411\u043E\u0440\u0438\u0441',\n      lastName: '\u041A\u0430\u0437\u0430\u043D\u0446\u0435\u0432',\n      img: './male.png',\n      points: '784',\n    },\n    {\n      id: '452',\n      name: '\u041F\u043E\u043B\u0438\u043D\u0430',\n      lastName: '\u041A\u0430\u043B\u0438\u043D\u0438\u043D\u0430',\n      img: './female.png',\n      points: '225',\n    },\n    {\n      id: '796',\n      name: '\u0414\u0430\u043D\u0438\u0438\u043B',\n      lastName: '\u0412\u043E\u0440\u043E\u0431\u044C\u0451\u0432',\n      img: './male.png',\n      points: '642',\n    },\n    {\n      id: '4',\n      name: '\u042D\u0440\u0438\u043A',\n      lastName: '\u0410\u043A\u0441\u0451\u043D\u043E\u0432',\n      img: './male.png',\n      points: '150',\n    },\n    {\n      id: '1155',\n      name: '\u0418\u0432\u0430\u043D',\n      lastName: '\u0418\u0432\u0430\u043D\u043E\u0432',\n      img: './male.png',\n      points: '100',\n    },\n    {\n      id: '12145',\n      name: '\u0410\u0440\u0442\u0435\u043C',\n      lastName: '\u0410\u043B\u0435\u043A\u0441\u0435\u0435\u0432',\n      img: './male.png',\n      points: '1000',\n    },\n  ],\n  friends: [\n    {\n      id: '9',\n      name: '\u0412\u043B\u0430\u0434\u0438\u043C\u0438\u0440',\n      lastName: '\u0421\u0435\u0440\u0433\u0435\u0435\u0432',\n      img: './male.png',\n    },\n    {\n      id: '4',\n      name: '\u042D\u0440\u0438\u043A',\n      lastName: '\u0410\u043A\u0441\u0451\u043D\u043E\u0432',\n      img: './male.png',\n    },\n    {\n      id: '15411',\n      name: '\u0418\u0440\u0438\u043D\u0430',\n      lastName: '\u0427\u0435\u0441\u043D\u043E\u043A\u043E\u0432\u0430',\n      img: './female.png',\n    },\n    {\n      id: '15564',\n      name: '\u0414\u0430\u0440\u0438\u043D\u0430',\n      lastName: '\u0411\u043E\u0431\u0440\u043E\u0432\u0430',\n      img: './female.png',\n    },\n  ],\n};\n\nexport default ratingData;\n", "import ratingData from './ratingData';\n\nclass Rating {\n  constructor(game) {\n    this.game = game;\n    this.canvas = this.game.getCanvas();\n    this.width = 66;\n    this.height = 61;\n    this.widthCloseRating = 25;\n    this.heightCloseRating = 25;\n    this.closeRatingX = 720;\n    this.closeRatingY = 95;\n    this.ratingX = 895;\n    this.ratingY = 550;\n    this.ratingStartScrollAreaX = 300;\n    this.ratingStartScrollAreaY = 245;\n    this.ratingEndScrollAreaY = 465;\n    this.barsOnScreen = 7;\n    this.barHeight = 25;\n    this.textFont = '14px sans-serif';\n    this.textColor = 'white';\n    this.fiendTextColor = 'red';\n    this.textOffset = 20;\n    this.barWidth = 400;\n    this.gapBetwenBars = 10;\n    this.timerToShowRating = null;\n    this.initialYPositionOfRatingWindow = 0;\n    this.ratingWindow = document.getElementById('rating-window');\n    this.bar = document.getElementById('bar');\n    this.periodOfRedraw = 10;\n    this.alreadyDrawn = false;\n    this.ratingDataIndex = 0;\n    this.ratingSortedArray = ratingData.rating.sort((a, b) => Number(b.points) - Number(a.points));\n    this.offsetRatingNumber = 33;\n    this.offsetRatingText = 100;\n    this.ratingTextWidth = 200;\n    this.offsetRatingScore = 325;\n  }\n\n  isClickedInsideRatingButton(x, y) {\n    return x >= this.ratingX\n    && x <= (this.ratingX + this.width)\n    && y >= this.ratingY\n    && y <= (this.ratingY + this.height);\n  }\n\n  isClickedInsideCloseRatingButton(x, y) {\n    return x >= this.closeRatingX\n    && x <= (this.closeRatingX + this.widthCloseRating)\n    && y >= this.closeRatingY && y <= (this.closeRatingY + this.heightCloseRating);\n  }\n\n  showRating() {\n    if (this.alreadyDrawn) return;\n    const drawRatingWindow = () => {\n      this.alreadyDrawn = true;\n      if (this.initialYPositionOfRatingWindow <= this.game.getCanvasHeight()) {\n        const speed = 5;\n        this.game.getContext().clearRect(\n          0,\n          0,\n          this.game.getCanvasWidth(),\n          this.game.getCanvasHeight(),\n        );\n        this.game.getContext().drawImage(\n          this.ratingWindow,\n          0,\n          -this.game.getCanvasHeight() + this.initialYPositionOfRatingWindow,\n          this.game.getCanvasWidth(),\n          this.game.getCanvasHeight(),\n        );\n        this.initialYPositionOfRatingWindow += speed;\n      }\n      if (this.initialYPositionOfRatingWindow > this.game.getCanvasHeight()) {\n        clearInterval(this.timerToShowRating);\n        this.timerToShowRating = null;\n        this.initialYPositionOfRatingWindow = 0;\n        this.drawRaitingBars();\n      }\n    };\n    this.timerToShowRating = setInterval(() => drawRatingWindow(), this.periodOfRedraw);\n  }\n\n  scroll(direction) {\n    if (direction === 'scrolldown') {\n      if (ratingData.rating.length - this.barsOnScreen > 0) {\n        this.ratingDataIndex = (ratingData.rating.length - this.barsOnScreen - 1)\n        >= this.ratingDataIndex ? this.ratingDataIndex + 1\n          : this.ratingDataIndex;\n      }\n    } else {\n      this.ratingDataIndex = this.ratingDataIndex - 1 > 0 ? this.ratingDataIndex - 1 : 0;\n    }\n    this.drawRaitingBars();\n  }\n\n  hideRating() {\n    this.game.getContext().clearRect(0, 0, this.game.getCanvasWidth(), this.game.getCanvasHeight());\n    this.game.draw();\n    this.alreadyDrawn = false;\n  }\n\n  drawRaitingBars() {\n    let offset = 0;\n    for (let barIndex = this.ratingDataIndex;\n      barIndex < this.barsOnScreen + this.ratingDataIndex; barIndex += 1) {\n      this.game.getContext().fillStyle = 'transparent';\n      this.game.getContext().clearRect(\n        this.ratingStartScrollAreaX,\n        this.ratingStartScrollAreaY + offset,\n        this.barWidth,\n        this.barHeight,\n      );\n      this.game.getContext().drawImage(\n        this.bar,\n        this.ratingStartScrollAreaX,\n        this.ratingStartScrollAreaY + offset,\n        this.barWidth,\n        this.barHeight,\n      );\n      this.game.getContext().font = this.textFont;\n      this.game.getContext().fillStyle = this.textColor;\n      if (ratingData.friends.findIndex((elem) => elem.id === this.ratingSortedArray[barIndex].id)\n        >= 0) {\n        this.game.getContext().fillStyle = this.fiendTextColor;\n      }\n      this.game.getContext().fillText(\n        barIndex + 1,\n        this.ratingStartScrollAreaX + this.offsetRatingNumber,\n        this.ratingStartScrollAreaY + offset + this.textOffset,\n      );\n      this.game.getContext().fillText(\n        `${this.ratingSortedArray[barIndex].name} ${this.ratingSortedArray[barIndex].lastName}`,\n        this.ratingStartScrollAreaX + this.offsetRatingText,\n        this.ratingStartScrollAreaY + offset + this.textOffset,\n      );\n      this.game.getContext().fillText(\n        this.ratingSortedArray[barIndex].points,\n        this.ratingStartScrollAreaX + this.offsetRatingScore,\n        this.ratingStartScrollAreaY + offset + this.textOffset,\n      );\n      offset += this.gapBetwenBars + this.barHeight;\n    }\n  }\n}\n\nexport default Rating;\n", "import Player from './player';\nimport Friends from './friends';\nimport Rating from './rating';\n\nclass Game {\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.ctx = this.canvas.getContext('2d');\n    this.canvas.width = 980;\n    this.canvas.height = 630;\n    this.player = new Player(this);\n    this.rating = new Rating(this);\n    this.friends = new Friends(this);\n    this.ratingIsShown = false;\n  }\n\n  getCanvas() {\n    return this.canvas;\n  }\n\n  getContext() {\n    return this.ctx;\n  }\n\n  getCanvasWidth() {\n    return this.canvas.width;\n  }\n\n  getCanvasHeight() {\n    return this.canvas.height;\n  }\n\n  start() {\n    this.canvas.addEventListener('pointerdown', (e) => this.handleCanvasClick(e));\n    this.canvas.addEventListener('mousemove', (e) => this.handleMouseMove(e));\n    this.canvas.addEventListener('wheel', (e) => this.handleScroll(e));\n    this.draw();\n  }\n\n  draw() {\n    this.getContext().fillStyle = 'transparent';\n    this.getContext().fillRect(0, 0, this.getCanvasWidth(), this.getCanvasHeight());\n    this.player.draw();\n    this.friends.draw();\n  }\n\n  handleCanvasClick(e) {\n    const rect = this.canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (this.rating.isClickedInsideRatingButton(x, y)) {\n      this.rating.showRating();\n      this.ratingIsShown = true;\n    }\n    if (this.rating.isClickedInsideCloseRatingButton(x, y)) {\n      this.rating.hideRating();\n      this.ratingIsShown = false;\n    }\n    if (this.player.isClickedInsideControlButton(x, y) && !this.ratingIsShown) {\n      this.player.nextStep();\n    }\n    if (this.friends.isClickedOnArrowButtons(x, y)) {\n      this.friends.redraw(x, y);\n    }\n  }\n\n  handleMouseMove(e) {\n    const rect = this.canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (this.rating.isClickedInsideRatingButton(x, y)) {\n      this.canvas.style.cursor = 'pointer';\n    } else if (this.player.isClickedInsideControlButton(x, y)) {\n      this.canvas.style.cursor = 'pointer';\n    } else if (this.rating.isClickedInsideCloseRatingButton(x, y)) {\n      this.canvas.style.cursor = 'pointer';\n    } else if (this.friends.isClickedOnArrowButtons(x, y)) {\n      this.canvas.style.cursor = 'pointer';\n    } else this.canvas.style.cursor = 'auto';\n  }\n\n  handleScroll(e) {\n    this.rating.scroll(e.deltaY > 0 ? 'scrolldown' : 'scrollup');\n  }\n}\n\nwindow.addEventListener('load', () => {\n  const canvas = document.getElementById('gamecanvas');\n  const game = new Game(canvas);\n  game.start();\n});\n"],
  "mappings": "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",
  "names": []
}
